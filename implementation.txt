// This is PSUEDOCODE not C++ syntax
// AFter declaring the semaphores this is the psuedocode for Reader writers problem that is deadlock free and starvation free
// Initialize variables
// global variables ->
    semaphore *enter , *exit , *wrt 

    int counter_in=0, counter_out=0;  //number of readers started and completed reading the resource
    bool is_waiting = false;
    //if a writer is about to write and enter the critical section


    wait(enter , pid);
    counter_in++;
    signal(enter);

    //Critical Section
    wait(exit , pid);
    counter_out++;
    if(is_waiting==true &&  counter_in==counter_out)
        signal(wrt);
    signal(exit);

    wait(entry , pid);
    
    wait(exit , pid);
    
    if(counter_in==counter_out){
        signal(exit);
    }
    else{
        is_waiting=true;
        signal(exit);
        wait(wrt , pid);
        is_waiting=false;
    }
    //Ctritical Section
    
    
    signal(entry);
